{"version":3,"sources":["components/NewTodo/NewTodo.tsx","components/TodoList/TodoList.tsx","components/Items/Items.tsx","components/CommentsList/CommentsList.tsx","components/NewComment/NewComment.tsx","components/Comments/Comments.tsx","App.tsx","index.tsx"],"names":["NewTodo","addTodo","useForm","register","handleSubmit","reset","errors","onSubmit","title","Form","className","Row","Col","Group","as","controlId","Control","type","placeholder","name","ref","required","sm","xs","Button","variant","onClick","TodoList","todos","removeTodo","setActiveItem","ListGroup","map","todo","Item","key","id","isActive","comments","length","Items","CommentList","comment","style","backgroundColor","color","NewComment","addComment","todoId","data","FormControl","onKeyUp","event","ctrlKey","Comments","App","useState","JSON","parse","localStorage","getItem","setTodos","useEffect","setItem","stringify","every","prev","index","console","log","activeItem","find","uuid","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7de83749.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\n\ntype FormData = {\n  title: string;\n};\n\ntype NewTodoProps = {\n  addTodo(title: string): void;\n};\n\nexport const NewTodo: React.FC<NewTodoProps> = ({ addTodo }) => {\n  const { register, handleSubmit, reset, errors } = useForm<FormData>();\n\n  const onSubmit = handleSubmit(({ title }) => {\n    addTodo(title);\n    reset();\n  });\n\n  return (\n    <Form className=\"align-items-center\" onSubmit={onSubmit}>\n      <Form.Row>\n        <Col>\n          <Form.Group as={Col} controlId=\"newTodo\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Type name here...\"\n              name=\"title\"\n              ref={register({ required: true })}\n              className={`${errors.title ? 'is-invalid' : ''}`}\n            />\n          </Form.Group>\n        </Col>\n        <Col sm={3} xs=\"auto\">\n          <Button\n            as={Col}\n            variant=\"info\"\n            type=\"submit\"\n            onClick={onSubmit}\n          >\n            Add New\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n","import React from 'react';\nimport {\n  ListGroup,\n  Button,\n  Row,\n  Col,\n} from 'react-bootstrap';\nimport { TodoI } from '../../interfaces/TodoI';\n\ntype TodoListProps = {\n  todos: TodoI[];\n  removeTodo(id: string): void;\n  setActiveItem(id: string): void;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, removeTodo, setActiveItem }) => (\n  <ListGroup>\n    {\n      todos.map(todo => (\n        <ListGroup.Item\n          key={todo.id}\n          className={`todo ${todo.isActive ? 'todo--active' : ''}`}\n          onClick={() => setActiveItem(todo.id)}\n        >\n          <Row className=\"align-items-center\">\n            <Col xs={7}>\n              <span>{todo.title}</span>\n            </Col>\n            <Col xs={2}>\n              <div className=\"bg-info todo-comments\">{todo.comments.length}</div>\n            </Col>\n            <Col xs={3}>\n              <Button\n                variant=\"outline-danger\"\n                type=\"button\"\n                onClick={() => {\n                  removeTodo(todo.id);\n                }}\n              >\n                Delete\n              </Button>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n      ))\n    }\n  </ListGroup>\n);\n","import React from 'react';\nimport { NewTodo } from '../NewTodo';\nimport { TodoList } from '../TodoList/TodoList';\nimport { TodoI } from '../../interfaces/TodoI';\n\ntype ItemsProps = {\n  addTodo(title: string): void;\n  todos: TodoI[];\n  removeTodo(id: string): void;\n  setActiveItem(id: string): void;\n};\n\nexport const Items: React.FC<ItemsProps> = ({\n  todos,\n  addTodo,\n  removeTodo,\n  setActiveItem,\n}) => {\n  return (\n    <div className=\"bg-light todo-field\">\n      <h2 className=\"text-secondary\">Items</h2>\n      <NewTodo addTodo={addTodo} />\n      {\n        todos.length\n          ? (\n            <TodoList\n              todos={todos}\n              removeTodo={removeTodo}\n              setActiveItem={setActiveItem}\n            />\n          )\n          : <h5 className=\"text-center\">No todos yet.</h5>\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { CommentI } from '../../interfaces/CommentI';\n\ntype CommentListProps = {\n  comments: CommentI[];\n};\n\nexport const CommentList: React.FC<CommentListProps> = ({ comments }) => {\n  return (\n    <ListGroup className=\"mb-3\">\n      {\n        comments.map(comment => (\n          <ListGroup.Item key={comment.id} className=\"p-0 mx-2 mb-2\">\n            <div className=\"comment\">\n              <div style={{ backgroundColor: comment.color }} className=\"col-2 comment-picture p-0\" />\n              <p className=\"p-1\">{comment.title}</p>\n            </div>\n          </ListGroup.Item>\n        ))\n      }\n    </ListGroup>\n  );\n};\n","import React from 'react';\nimport {\n  Form,\n  Col,\n  Button,\n  FormControl,\n} from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\n\ntype FormData = {\n  title: string;\n  color: string;\n};\n\ntype NewCommentProps = {\n  addComment(todoId: string, title: string, color: string): void;\n  todoId: string;\n};\n\nexport const NewComment: React.FC<NewCommentProps> = ({ addComment, todoId }) => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n  } = useForm<FormData>();\n\n  const onSubmit = handleSubmit((data) => {\n    addComment(todoId, data.title, data.color);\n  });\n\n  return (\n    <Form className=\"align-items-center comment-form\" onSubmit={onSubmit}>\n      <Form.Row>\n        <Col xs={3}>\n          <Form.Group controlId=\"newColor\" className=\"h-100\">\n            <Form.Control\n              type=\"color\"\n              name=\"color\"\n              ref={register({ required: true })}\n              className=\"h-100\"\n            />\n          </Form.Group>\n        </Col>\n        <Col xs={6}>\n          <Form.Group controlId=\"newComment\" className=\"h-100\">\n            <FormControl\n              as=\"textarea\"\n              placeholder=\"Type comment here...\"\n              name=\"title\"\n              ref={register({ required: true })}\n              className={`h-100 ${errors.title ? 'is-invalid' : ''}`}\n              onKeyUp={(event: React.KeyboardEvent) => {\n                if (event.key === 'Enter' && event.ctrlKey) {\n                  onSubmit();\n                }\n              }}\n            />\n          </Form.Group>\n        </Col>\n        <Col xs={3}>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={onSubmit}\n            className=\"h-100 w-100\"\n          >\n            Add New\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n","import React from 'react';\nimport { TodoI } from '../../interfaces/TodoI';\nimport { CommentList } from '../CommentsList';\nimport { NewComment } from '../NewComment';\n\ntype CommentsProps = {\n  todo: TodoI;\n  addComment(todoId: string, title: string, color: string): void;\n};\n\nexport const Comments: React.FC<CommentsProps> = ({ todo, addComment }) => {\n  return (\n    <div className=\"bg-light todo-field\">\n      <h2 className=\"text-secondary\">\n        Comments&nbsp;#\n        {todo.id}\n      </h2>\n      <CommentList comments={todo.comments} />\n      <NewComment addComment={addComment} todoId={todo.id} />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { uuid } from 'uuidv4';\nimport { Items } from './components/Items';\nimport { Comments } from './components/Comments/Comments';\nimport { TodoI } from './interfaces/TodoI';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<TodoI[]>(JSON.parse(localStorage.getItem('todos') || '[]'));\n\n  const addTodo = (title: string) => {\n    setTodos(prev => [\n      ...prev,\n      {\n        title,\n        id: uuid(),\n        isActive: false,\n        comments: [],\n      },\n    ]);\n  };\n\n  const removeTodo = (id: string) => {\n    setTodos(prev => prev.filter(todo => todo.id !== id));\n  };\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const setActiveItem = (id: string) => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, isActive: true };\n      }\n\n      return { ...todo, isActive: false };\n    }));\n  };\n\n  if (todos.length && todos.every(todo => !todo.isActive)) {\n    setTodos(prev => prev.map((todo, index) => {\n      if (index === prev.length - 1) {\n        return { ...todo, isActive: true };\n      }\n\n      return todo;\n    }));\n  }\n\n  console.log(todos);\n\n  const activeItem: TodoI | undefined = todos.find(todo => todo.isActive);\n\n  const addComment = (todoId: string, title: string, color: string) => {\n    setTodos(prev => prev.map(todo => {\n      if (todoId === todo.id) {\n        return {\n          ...todo,\n          comments: [\n            ...todo.comments,\n            {\n              id: uuid(),\n              title,\n              color,\n            },\n          ],\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  return (\n    <div className=\"App container\">\n      <Items\n        todos={todos}\n        addTodo={addTodo}\n        removeTodo={removeTodo}\n        setActiveItem={setActiveItem}\n      />\n      {\n        activeItem && <Comments todo={activeItem} addComment={addComment} />\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}