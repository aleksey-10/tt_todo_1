{"version":3,"sources":["components/NewTodo/NewTodo.tsx","components/TodoList/TodoList.tsx","components/Items/Items.tsx","components/Comments/Comments.tsx","App.tsx","index.tsx"],"names":["NewTodo","addTodo","useForm","register","onSubmit","handleSubmit","title","Form","className","Row","Col","Group","as","controlId","Control","type","placeholder","name","ref","required","sm","xs","Button","variant","onClick","TodoList","todos","removeTodo","setActiveItem","ListGroup","map","todo","Item","key","id","isActive","comments","length","Items","Comments","App","useState","JSON","parse","localStorage","getItem","setTodos","useEffect","setItem","stringify","every","prev","index","console","log","activeItem","find","uuid","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.535707f9.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\n\ntype FormData = {\n  title: string;\n};\n\ntype NewTodoProps = {\n  addTodo(title: string): void;\n};\n\nexport const NewTodo: React.FC<NewTodoProps> = ({ addTodo }) => {\n  const { register, handleSubmit } = useForm<FormData>();\n\n  const onSubmit = handleSubmit(({ title }) => {\n    addTodo(title);\n  });\n\n  return (\n    <Form className=\"align-items-center\" onSubmit={onSubmit}>\n      <Form.Row>\n        <Col>\n          <Form.Group as={Col} controlId=\"newTodo\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Type name here...\"\n              name=\"title\"\n              ref={register({ required: true })}\n            />\n          </Form.Group>\n        </Col>\n        <Col sm={3} xs=\"auto\">\n          <Button\n            as={Col}\n            variant=\"info\"\n            type=\"submit\"\n            onClick={onSubmit}\n          >\n            Add New\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n","import React from 'react';\nimport {\n  ListGroup,\n  Button,\n  Row,\n  Col,\n} from 'react-bootstrap';\nimport { TodoI } from '../../interfaces/TodoI';\n\ntype TodoListProps = {\n  todos: TodoI[];\n  removeTodo(id: string): void;\n  setActiveItem(id: string): void;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, removeTodo, setActiveItem }) => (\n  <ListGroup>\n    {\n      todos.map(todo => (\n        <ListGroup.Item\n          key={todo.id}\n          className={`todo ${todo.isActive ? 'todo--active' : ''}`}\n          onClick={() => setActiveItem(todo.id)}\n        >\n          <Row className=\"align-items-center\">\n            <Col xs={7}>\n              <span>{todo.title}</span>\n            </Col>\n            <Col xs={2}>\n              <div className=\"bg-info todo-comments\">{todo.comments.length}</div>\n            </Col>\n            <Col xs={3}>\n              <Button\n                variant=\"outline-danger\"\n                type=\"button\"\n                onClick={() => {\n                  removeTodo(todo.id);\n                }}\n              >\n                Delete\n              </Button>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n      ))\n    }\n  </ListGroup>\n);\n","import React from 'react';\nimport { NewTodo } from '../NewTodo';\nimport { TodoList } from '../TodoList/TodoList';\nimport { TodoI } from '../../interfaces/TodoI';\n\ntype ItemsProps = {\n  addTodo(title: string): void;\n  todos: TodoI[];\n  removeTodo(id: string): void;\n  setActiveItem(id: string): void;\n};\n\nexport const Items: React.FC<ItemsProps> = ({\n  todos,\n  addTodo,\n  removeTodo,\n  setActiveItem,\n}) => {\n  return (\n    <div className=\"bg-light todo-field\">\n      <h2 className=\"text-secondary\">Items</h2>\n      <NewTodo addTodo={addTodo} />\n      {\n        todos.length\n          ? (\n            <TodoList\n              todos={todos}\n              removeTodo={removeTodo}\n              setActiveItem={setActiveItem}\n            />\n          )\n          : <h5 className=\"text-center\">No todos yet.</h5>\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { TodoI } from '../../interfaces/TodoI';\n\ntype CommentsProps = {\n  todo: TodoI;\n};\n\nexport const Comments: React.FC<CommentsProps> = ({ todo }) => {\n  return (\n    <div className=\"bg-light todo-field\">\n      <h2 className=\"text-secondary\">\n        Comment&nbsp;#\n        {todo.id}\n      </h2>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { uuid } from 'uuidv4';\nimport { Items } from './components/Items';\nimport { Comments } from './components/Comments/Comments';\nimport { TodoI } from './interfaces/TodoI';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<TodoI[]>(JSON.parse(localStorage.getItem('todos') || '[]'));\n\n  const addTodo = (title: string) => {\n    setTodos(prev => [\n      ...prev,\n      {\n        title,\n        id: uuid(),\n        isActive: false,\n        comments: [],\n      },\n    ]);\n  };\n\n  const removeTodo = (id: string) => {\n    setTodos(prev => prev.filter(todo => todo.id !== id));\n  };\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const setActiveItem = (id: string) => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, isActive: true };\n      }\n\n      return { ...todo, isActive: false };\n    }));\n  };\n\n  if (todos.length && todos.every(todo => !todo.isActive)) {\n    setTodos(prev => prev.map((todo, index) => {\n      if (index === prev.length - 1) {\n        return { ...todo, isActive: true };\n      }\n\n      return todo;\n    }));\n  }\n\n  console.log(todos);\n\n  const activeItem: TodoI | undefined = todos.find(todo => todo.isActive);\n\n  return (\n    <div className=\"App container\">\n      <Items\n        todos={todos}\n        addTodo={addTodo}\n        removeTodo={removeTodo}\n        setActiveItem={setActiveItem}\n      />\n      {\n        activeItem && <Comments todo={activeItem} />\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}